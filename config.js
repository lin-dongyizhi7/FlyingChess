// 格子类型定义
// type: none | start | end | boost | back | swap | jump | safe
// param: 可选参数，boost/back 为偏移量，jump 为目标索引

const CELL_TYPES = {
    NONE: "none",
    START: "start",
    END: "end",
    BOOST: "boost",
    BACK: "back",
    SWAP: "swap",
    JUMP: "jump",
    SAFE: "safe",
};

// 生成默认任务清单：为每个格子提供情侣互动任务
function buildDefaultTasks(size, start, end) {
    const pool = [
        "牵手走10步",
        "拥抱10秒",
        "对视15秒",
        "互夸对方3句",
        "分享一个今天的小开心",
        "轻触鼻尖一下",
        "一起深呼吸3次",
        "讲一个关于我们的小回忆",
        "一起自拍一张",
        "互相捏捏脸",
        "击掌并说‘我们最棒’",
        "合唱一段喜欢的歌",
        "一起做5次开合跳",
        "闭眼描述彼此的外貌3点",
        "说一句今天的感谢",
        "讲一个冷笑话",
        "对方指定一个可爱动作",
        "一起数到20（轮流）",
        "同时说‘加油！’",
        "分享一件想一起完成的事",
        "互相画个小爱心",
        "彼此取一个甜蜜外号",
        "各自许一个小愿望",
        "击掌三连",
        "击掌后拥抱",
        "闭眼感受对方的手心温度",
        "同步走路10秒",
        "讲一句“我喜欢你因为...”",
        "给对方一个比心",
        "一起喝一口水",
        "一起摆个同款姿势合影",
        "拉钩约定一个小目标",
        "分别说一句“我会在”",
        "一起数彼此心跳10下",
        "做个胜利手势",
        "互相轻碰肩膀",
        "想一个下一次约会的点子",
        "说一句“晚安/早安”风格的话",
        "共同做一个搞怪表情",
        "说一句“辛苦啦”",
        "交换一个小秘密",
        "倒数10秒后击掌",
        "一起伸展一下身体",
        "聊聊本周最期待的事",
        "想一个彼此的专属暗号",
        "轻触对方额头",
        "模仿彼此的口头禅一次",
        "一起看向远处5秒",
        "交换一个今天的关键词",
        "共同完成一个小舞步",
        "互相学彼此的签名动作",
        "各自说一句今天的幸运色",
        "一起说出此刻的三个感受词",
        "共同决定一首背景BGM",
        "为今天取一个可爱的主题名",
        "同时做一个伸懒腰动作",
        "彼此互指对方最可爱的地方",
        "一起练习同步拍手节奏",
        "合力摆出‘OK’手势",
        "共同说出一个梦想地点",
        "各自说一个想培养的小习惯",
        "一起喝一小口水并微笑",
        "互相挑战眨眼接龙3次",
        "同时转头看向窗外2秒",
        "互相点头三次表示认可",
        "共同回忆一次让人安心的瞬间",
        "为彼此取一个天气称号",
        "同时用手比出数字‘2’",
        "同步说‘收到！’",
        "一起轻敲地面两下",
        "互相说一个今天的关键字",
        "共同说一句‘我们是一队’",
        "各自分享一个想学的技能",
        "同时微笑5秒不许笑场",
        "一起默数到6（交替）",
        "互相比‘耶’并合影",
        "一起模仿猫叫一声",
        "共同想一个暗号手势",
        "用手掌轻轻碰一碰",
        "说一句专属口头禅",
        "互相模仿走路姿势2步",
        "一起轻轻原地跳一下",
        "共同说出彼此的姓氏",
        "同步做一个气鼓鼓表情",
        "各自说一个解压方式",
        "一起看向同一方向3秒",
        "互相用眼神传递‘加油’",
        "同步点两下头",
        "共同用食指画一个圆",
        "各自说一句‘安心’",
        "一起做一个胜利POSE",
        "互相模仿彼此的语气词",
        "同步向前跨一步再退回",
        "共同说出今天最满意的一件事",
        "各自说一个喜欢的花名",
        "一起按节奏拍手三次",
        "互相轻碰手肘一下",
        "同时说‘继续！’",
        "共同伸出两只手掌贴一贴",
        "各自说一个想看的电影名",
        "一起约定一个小小奖励",
        "互相许一个24小时内能完成的小愿",
        "共同数到8（你奇我偶）",
        "各自用三个词夸夸自己",
        "一起点两下屏幕假装合拍",
        "互相摆一个最帅/美的角度",
        "共同说‘我们出发’并迈一步",
        "各自说一个喜欢的水果",
        "一起想一个下次想做的小挑战",
        "互相击拳并微笑",
        "共同比一个超大爱心",
        "各自分享一个小目标",
        "一起做一个星星手势",
        "互相说一句‘有我在’",
        "共同小幅度左右摇摆3秒",
        "各自说一个喜欢的季节理由",
        "一起假装听到掌声并鞠躬",
        "互相说一句‘辛苦你啦’",
        "共同夸对方衣着一处",
        "各自说一个想感谢的人",
        "一起想一个下次旅行城市",
        "互相眨眼两次",
        "共同深呼吸并点头",
        "各自说一个想学习的乐器",
        "一起做一个点赞POSE",
        "互相伸出手指并碰拳",
        "共同说一句‘棒！’",
        "各自分享一首循环的歌名",
        "一起慢慢转身看周围一圈",
        "互相鼓掌三次",
        "共同说一句‘保持热爱’",
        "各自说一个专属的emoji",
        "一起做一个‘冲呀’动作",
        "互相轻触手腕",
        "共同说出彼此的幸运数字",
        "各自说一个想养的小动物",
        "一起假装举杯庆祝",
        "互相说一句‘今天也棒’",
        "共同对视并点头一次",
        "各自说一个喜欢的甜品",
        "一起做一个伸展颈部动作",
        "互相说一个‘今天的主题词’",
        "共同定个小闹钟般的口令",
        "各自说一个想收藏的小东西",
        "一起摆‘剪刀石头布’定格",
        "互相轻触掌心并感受温度",
        "共同说一句‘到家报平安’",
        "各自说一个想学习的语言",
        "一起假装合照说‘茄子’",
        "互相一秒变身最可爱",
        "共同说一句‘下次见也要快乐’"
    ];
    const tasks = new Array(size).fill("");
    const startIdx = Math.floor(Math.random() * pool.length);
    for (let i = 0, j = startIdx; i < size; i++) {
        if (i === start) { tasks[i] = "开始"; continue; }
        if (i === end) { tasks[i] = "结束"; continue; }
        tasks[i] = pool[j % pool.length];
        j++;
    }
    return tasks;
}

// 默认关卡配置
// 每个关卡提供：size(格子数)，cells(稀疏定义的特殊格子), start, end
const LEVELS = {
    easy: {
        name: "入门",
        size: 40,
        start: 0,
        end: 39,
        cells: {
            0: { type: CELL_TYPES.START },
            39: { type: CELL_TYPES.END },
            5: { type: CELL_TYPES.BOOST, param: 3 },
            9: { type: CELL_TYPES.BACK, param: -2 },
            13: { type: CELL_TYPES.SAFE },
            17: { type: CELL_TYPES.SWAP },
            22: { type: CELL_TYPES.JUMP, param: 30 },
            28: { type: CELL_TYPES.BACK, param: -4 },
            33: { type: CELL_TYPES.BOOST, param: 2 },
        },
        tasks: null,
    },
    normal: {
        name: "标准",
        size: 60,
        start: 0,
        end: 59,
        cells: {
            0: { type: CELL_TYPES.START },
            59: { type: CELL_TYPES.END },
            6: { type: CELL_TYPES.BOOST, param: 4 },
            8: { type: CELL_TYPES.SAFE },
            12: { type: CELL_TYPES.BACK, param: -3 },
            15: { type: CELL_TYPES.JUMP, param: 25 },
            19: { type: CELL_TYPES.SWAP },
            23: { type: CELL_TYPES.BOOST, param: 3 },
            27: { type: CELL_TYPES.BACK, param: -5 },
            31: { type: CELL_TYPES.SAFE },
            36: { type: CELL_TYPES.JUMP, param: 45 },
            42: { type: CELL_TYPES.BOOST, param: 2 },
            47: { type: CELL_TYPES.SWAP },
            52: { type: CELL_TYPES.BACK, param: -4 },
        },
        tasks: null, // 运行时填充
    },
    hard: {
        name: "挑战",
        size: 80,
        start: 0,
        end: 79,
        cells: {
            0: { type: CELL_TYPES.START },
            79: { type: CELL_TYPES.END },
            4: { type: CELL_TYPES.BOOST, param: 5 },
            7: { type: CELL_TYPES.BACK, param: -4 },
            10: { type: CELL_TYPES.SAFE },
            14: { type: CELL_TYPES.JUMP, param: 24 },
            18: { type: CELL_TYPES.SWAP },
            21: { type: CELL_TYPES.BOOST, param: 4 },
            25: { type: CELL_TYPES.BACK, param: -6 },
            29: { type: CELL_TYPES.SAFE },
            33: { type: CELL_TYPES.JUMP, param: 52 },
            38: { type: CELL_TYPES.BOOST, param: 3 },
            43: { type: CELL_TYPES.SWAP },
            49: { type: CELL_TYPES.BACK, param: -5 },
            55: { type: CELL_TYPES.SAFE },
            60: { type: CELL_TYPES.JUMP, param: 70 },
            68: { type: CELL_TYPES.BOOST, param: 2 },
            72: { type: CELL_TYPES.BACK, param: -4 },
        },
        tasks: null,
    },
};

// 自定义配置模板
const DEFAULT_CUSTOM = (size = 60) => ({
    name: "自定义",
    size,
    start: 0,
    end: size - 1,
    cells: { 0: { type: CELL_TYPES.START }, [size - 1]: { type: CELL_TYPES.END } },
    tasks: null,
});

// 导出（挂到 window）
window.FlyingChessConfig = {
    CELL_TYPES,
    LEVELS,
    DEFAULT_CUSTOM,
    buildDefaultTasks,
};


